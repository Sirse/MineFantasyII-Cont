buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

version = "2.8.14.7"
group= "minefantasy.mf2.minefantasy2"
archivesBaseName = "MineFantasyII"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    replace "@VERSION@", project.version
}

idea { module { inheritOutputDirs = true } }

repositories {
    maven {
        name = "GTNH"
        url = "https://maven.gtnewhorizons.com/"
    }
    maven {
        name = "covers1624"
        url = "https://maven.covers1624.net/"
    }
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    compile name: 'bukkit-1.7.10'
    compile name: 'CraftTweaker-1.7.10-3.1.0-legacy-deobf'
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.141:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.48:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn('deobfJar')

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }